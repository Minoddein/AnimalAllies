name: "Dependency Vulnerability Scan"

env:
  NUGET_USERNAME: ${{ secrets.NUGET_USERNAME }}
  NUGET_PASSWORD: ${{ secrets.NUGET_PASSWORD }}

on:
  schedule:
    - cron: '0 0 * * 0'  # Weekly run
  workflow_dispatch:  # Manual trigger

jobs:
  scan_dependencies:
    name: Scan Dependencies
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Add private NuGet source
      run: |
        dotnet nuget add source https://gitlab.com/api/v4/projects/63188031/packages/nuget/index.json \
          --name GitLab \
          --username $NUGET_USERNAME \
          --password $NUGET_PASSWORD \
          --store-password-in-clear-text

    - name: Install outdated checker
      run: dotnet tool install -g dotnet-outdated-tool

    - name: Check vulnerable packages
      run: |
        dotnet list package --vulnerable --include-transitive ./TelegramBotService/TelegramBotService.sln
        dotnet list package --vulnerable --include-transitive ./NotificationService/NotificationService.sln
        dotnet list package --vulnerable --include-transitive ./FileService/FileService.sln
        dotnet list package --vulnerable --include-transitive ./CacheInvalidatorService/CacheInvalidatorService.sln
        dotnet list package --vulnerable --include-transitive ./backend/backend.sln

    - name: Check outdated packages
      run: |
        dotnet outdated ./TelegramBotService/TelegramBotService.sln --fail-on-updates
        dotnet outdated ./NotificationService/NotificationService.sln --fail-on-updates
        dotnet outdated ./FileService/FileService.sln --fail-on-updates
        dotnet outdated ./CacheInvalidatorService/CacheInvalidatorService.sln --fail-on-updates
        dotnet outdated ./backend/backend.sln --fail-on-updates
