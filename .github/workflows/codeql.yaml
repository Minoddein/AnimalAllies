name: "CodeQL"

on:
  push:            # запуск на каждый пуш в любую ветку
    branches: [ "**" ]
  pull_request:    # запуск при PR
    branches: [ "**" ]
  schedule:
    - cron: '0 0 * * 0'  # еженедельный автозапуск

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: |
            dotnet restore ./TelegramBotService/TelegramBotService.sln
            dotnet restore ./NotificationService/NotificationService.sln
            dotnet restore ./FileService/FileService.sln
            dotnet restore ./CacheInvalidatorService/CacheInvalidatorService.sln
            dotnet restore ./backend/backend.sln

      - name: Build solutions
        run: |
          dotnet build ./TelegramBotService/TelegramBotService.sln --configuration Release --no-restore
          dotnet build ./NotificationService/NotificationService.sln --configuration Release --no-restore
          dotnet build ./FileService/FileService.sln --configuration Release --no-restore
          dotnet build ./CacheInvalidatorService/CacheInvalidatorService.sln --configuration Release --no-restore
          dotnet build ./backend/backend.sln --configuration Release --no-restore

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
